import { divide } from 'lodash'
import Vue from 'vue'
import { Component, Prop } from 'vue-property-decorator'

import styles from './style.module.css'

interface ButtonProps {
  name: string
  desciption: string
  rating: number
  passed?: boolean
}

@Component
export class MapCard extends Vue {
  @Prop()
  name: ButtonProps['name']

  @Prop()
  desciption: ButtonProps['desciption']

  @Prop()
  rating: ButtonProps['rating']
  @Prop()
  passed: ButtonProps['passed']

  renderRating() {
    const renderArr = []
    for (let i = 1; i <= 5; i++) {
      if (i <= this.rating) {
        renderArr.push(
          <svg
            class={styles.ratingStar}
            width="16"
            height="16"
            viewBox="0 0 16 16"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M15.4829 5.63406L10.6864 4.90408L8.54222 0.352135C8.48365 0.227506 8.38731 0.126615 8.26829 0.0652895C7.96981 -0.0890138 7.6071 0.0395723 7.45786 0.352135L5.3137 4.90408L0.517213 5.63406C0.384974 5.65384 0.26407 5.71912 0.171503 5.81803C0.0595945 5.93848 -0.0020722 6.10053 5.31712e-05 6.26856C0.00217854 6.4366 0.0679221 6.59688 0.182838 6.71418L3.65316 10.2572L2.83328 15.2602C2.81405 15.3766 2.82635 15.4963 2.86878 15.6057C2.91121 15.7151 2.98207 15.8099 3.07333 15.8793C3.16459 15.9488 3.27259 15.99 3.38509 15.9984C3.4976 16.0068 3.6101 15.982 3.70983 15.9269L8.00004 13.5648L12.2902 15.9269C12.4074 15.9922 12.5434 16.0139 12.6737 15.9902C13.0024 15.9308 13.2235 15.6044 13.1668 15.2602L12.3469 10.2572L15.8172 6.71418C15.9117 6.61724 15.974 6.49064 15.9929 6.35216C16.0439 6.00597 15.8135 5.68549 15.4829 5.63406V5.63406Z" />
          </svg>
        )
      } else {
        renderArr.push(
          <svg
            class={styles.notRatingStar}
            width="16"
            height="16"
            viewBox="0 0 16 16"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M15.4829 5.63406L10.6864 4.90408L8.54222 0.352135C8.48365 0.227506 8.38731 0.126615 8.26829 0.0652895C7.96981 -0.0890138 7.6071 0.0395723 7.45786 0.352135L5.3137 4.90408L0.517213 5.63406C0.384974 5.65384 0.26407 5.71912 0.171503 5.81803C0.0595945 5.93848 -0.0020722 6.10053 5.31712e-05 6.26856C0.00217854 6.4366 0.0679221 6.59688 0.182838 6.71418L3.65316 10.2572L2.83328 15.2602C2.81405 15.3766 2.82635 15.4963 2.86878 15.6057C2.91121 15.7151 2.98207 15.8099 3.07333 15.8793C3.16459 15.9488 3.27259 15.99 3.38509 15.9984C3.4976 16.0068 3.6101 15.982 3.70983 15.9269L8.00004 13.5648L12.2902 15.9269C12.4074 15.9922 12.5434 16.0139 12.6737 15.9902C13.0024 15.9308 13.2235 15.6044 13.1668 15.2602L12.3469 10.2572L15.8172 6.71418C15.9117 6.61724 15.974 6.49064 15.9929 6.35216C16.0439 6.00597 15.8135 5.68549 15.4829 5.63406V5.63406Z" />
          </svg>
        )
      }
    }

    return renderArr
  }

  render() {
    return (
      <div class={styles.root}>
        <div class={styles.name}>
          <div class={styles.text}>{this.name}</div>
          {this.passed && (
            <svg
              width="16"
              height="16"
              viewBox="0 0 16 16"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8 0C3.58173 0 0 3.58173 0 8C0 12.4183 3.58173 16 8 16C12.4183 16 16 12.4183 16 8C16 3.58173 12.4183 0 8 0ZM8 1.73828C11.4583 1.73828 14.2607 4.54261 14.2607 8C14.2607 11.4574 11.4583 14.2607 8 14.2607C4.54173 14.2607 1.73925 11.4574 1.73925 8C1.73927 4.54261 4.54173 1.73828 8 1.73828ZM11.0654 4.20117L6.42871 8.83887L4.9248 7.33496L3.44921 8.80957L4.95312 10.3135L6.43847 11.7988L7.91309 10.3232L12.5508 5.68652L11.0654 4.20117V4.20117Z"
                fill="#4ECB71"
              />
            </svg>
          )}
        </div>
        <div class={styles.desciption}>{this.desciption}</div>
        <div class={styles.rating}>{this.renderRating()}</div>
      </div>
    )
  }
}
